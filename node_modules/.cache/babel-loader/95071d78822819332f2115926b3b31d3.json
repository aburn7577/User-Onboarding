{"ast":null,"code":"var _jsxFileName = \"/Users/ashley/Lambda/Projects/User-Onboarding/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport Form from './components/Form';\nimport Members from './components/Members';\nimport * as yup from 'yup';\nimport schema from './components/formSchema'; //starting form values\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst startFormValues = {\n  //Text inputs//\n  first_name: '',\n  last_name: '',\n  email: '',\n  //Password//\n  password: '',\n  //Checkbox//\n  terms: false\n};\nconst startFormErrors = {\n  first_name: '',\n  last_name: '',\n  email: '',\n  password: ''\n};\nconst startMembers = [];\nconst startDisabled = true;\n\nfunction App() {\n  _s();\n\n  const [members, setMembers] = useState(startMembers);\n  const [formValues, setFormValues] = useState(startFormValues);\n  const [formErrors, setFormErrors] = useState(startFormErrors);\n  const [disabled, setDisabled] = useState(startDisabled); //Axios Stuff///\n\n  const getMembers = () => {\n    Axios.get('https://reqres.in/api/users').then(res => {\n      setMembers(res.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const postNewMember = newMember => {\n    Axios.post('https://reqres.in/api/users', newMember).then(res => {\n      setMembers([...members, res.data]);\n      setFormValues(startFormValues);\n    }).catch(error => {\n      setFormValues(startFormValues);\n      console.log(error);\n    });\n  }; // Event Handlers////\n\n\n  const inputChange = (name, value) => {\n    // use yup here and schema\n    setFormValues({ ...formValues,\n      [name]: value // NOT AN ARRAY, computed property names\n\n    });\n  };\n\n  const formSubmit = () => {\n    const newMembers = {\n      first_name: formValues.first_name.trim(),\n      last_name: formValues.last_name.trim(),\n      email: formValues.email.trim(),\n      password: formValues.password.trim()\n    };\n    postNewMember(newMembers);\n  }; // Side effects//\n\n\n  useEffect(() => {\n    getMembers();\n  }, []);\n  useEffect(() => {\n    isSchema.isValid(formValues).then(valid => {\n      setDisabled(!valid);\n    });\n  }, [formValues]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Join our Team!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      values: formValues,\n      change: inputChange,\n      submit: formSubmit,\n      disabled: disabled,\n      errors: formErrors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), members.map(member => {\n      return /*#__PURE__*/_jsxDEV(Members, {\n        details: member\n      }, member.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"TeIU2S9qIiULC+USwnAcCMzdle8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ashley/Lambda/Projects/User-Onboarding/src/App.js"],"names":["Axios","React","useState","useEffect","Form","Members","yup","schema","startFormValues","first_name","last_name","email","password","terms","startFormErrors","startMembers","startDisabled","App","members","setMembers","formValues","setFormValues","formErrors","setFormErrors","disabled","setDisabled","getMembers","get","then","res","data","catch","error","console","log","postNewMember","newMember","post","inputChange","name","value","formSubmit","newMembers","trim","isSchema","isValid","valid","map","member","id"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport Axios from 'axios'\nimport React, { useState, useEffect } from 'react'\nimport Form from './components/Form'\nimport Members from './components/Members'\nimport * as yup from 'yup'\nimport schema from './components/formSchema'\n\n//starting form values\nconst startFormValues = {\n  //Text inputs//\n  first_name: '',\n  last_name: '',\n  email: '',\n  //Password//\n  password: '',\n  //Checkbox//\n  terms: false,\n}\nconst startFormErrors = {\n  first_name: '',\n  last_name: '',\n  email: '',\n  password: '',\n}\n\nconst startMembers = []\nconst startDisabled = true\n\nfunction App() {\n  const [members, setMembers] = useState(startMembers)\n  const [formValues, setFormValues] = useState(startFormValues)\n  const [formErrors, setFormErrors] = useState(startFormErrors)\n  const [disabled, setDisabled] = useState(startDisabled)\n\n  //Axios Stuff///\n  const getMembers = () => {\n    Axios.get('https://reqres.in/api/users')\n      .then(res => {\n        setMembers(res.data)\n      })\n      .catch(error => {\n        console.log(error)\n      })\n  }\n  const postNewMember = newMember => {\n    Axios.post('https://reqres.in/api/users', newMember)\n      .then(res => {\n        setMembers([...members, res.data])\n        setFormValues(startFormValues)\n      })\n      .catch(error => {\n        setFormValues(startFormValues)\n        console.log(error)\n      })\n  }\n  // Event Handlers////\n  const inputChange = (name, value) => {\n    // use yup here and schema\n    setFormValues({\n      ...formValues,\n      [name]: value // NOT AN ARRAY, computed property names\n    })\n  }\n  const formSubmit = () => {\n    const newMembers = {\n      first_name: formValues.first_name.trim(),\n      last_name: formValues.last_name.trim(),\n      email: formValues.email.trim(),\n      password: formValues.password.trim(),\n    }\n    postNewMember(newMembers)\n  }\n  // Side effects//\n  useEffect(() => {\n    getMembers()\n  }, [])\n  useEffect(() => {\n    isSchema.isValid(formValues)\n      .then(valid => {\n        setDisabled(!valid)\n      })\n  }, [formValues])\n\n\n  return (\n    <div className=\"App\">\n      <header><h1>Join our Team!!</h1></header>\n      <Form\n        values={formValues}\n        change={inputChange}\n        submit={formSubmit}\n        disabled={disabled}\n        errors={formErrors}\n      />\n\n      {\n        members.map(member => {\n          return (\n            <Members key={member.id} details={member} />\n          )\n        })\n      }\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}