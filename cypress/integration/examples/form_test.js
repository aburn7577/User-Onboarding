// write test here!

describe('User Onbording App', () => {
    beforeEach(() => {
        cy.visit('http://localhost:3000')
    })
    it('sanity checks', () => {
        expect(10).to.equal(10)
        expect(1 + 2).to.equal(4 - 1)
        expect(6 + 2).to.equal(8)
    })
    const firstNameInput = () => cy.get('input[name="first_name"]')
    const lastNameInput = () => cy.get('input[name="last_name"]')
    const emailInput = () => cy.get('input[type="email"]')
    const passwordInput = () => cy.get('input[type="password"]')
    const termsBox = () => cy.get('input[type="checkbox"]')
    const submitBtn = () => cy.get('button')


    it('has the proper elements', () => {
        firstNameInput().should('exist')
        lastNameInput().should('exist')
        emailInput().should('exist')
        passwordInput().should('exist')
        termsBox().should('exist')
        submitBtn().should('exist')
    })
    describe('filling out inputs', () => {
        it('can type inside inputs and check box', () => {
            firstNameInput()
                .should('have.value', '')
                .type('test first name')
                .should('have.value', 'test first name')
            lastNameInput()
                .should('have.value', '')
                .type('test last name')
                .should('have.value', 'test last name')
            emailInput()
                .should('have.value', '')
                .type('test@cypress.com')
                .should('have.value', 'test@cypress.com')
            passwordInput()
                .should('have.value', '')
                .type('password')
                .should('have.value', 'password')
            termsBox().click()
        })
        it('submits inputs', () => {
            submitBtn().should('be.disabled')
            firstNameInput().type('test first name')
            lastNameInput().type('test last name')
            emailInput().type('test@cypress.com')
            passwordInput().type('password')
            termsBox().click()
            submitBtn()
                .should('be.enabled')
                .click()
        })
        it('gives error if input empty', () => {
            firstNameInput().type('test first name')
            lastNameInput().type('test last name')
            emailInput().type('test@cypress.com')
            passwordInput().type('password')
            termsBox().click()
            lastNameInput().clear()
            cy.contains('Last name NOW!').should('exist')
        })
    })
})